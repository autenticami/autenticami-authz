syntax="proto3";

package policydecisionpoint;

option go_package = "github.com/autenticami/autenticami-authz/internal/api/pdp/v1";

message Attribute {
   string key = 1;
   string value = 2;
}

message Identity {
  string uur = 1;
  repeated Attribute attributes = 2;
}

// Permission state

message PermissionsStateRequest {
  Identity identity = 1;
}

message PolicyStatement {
  string name = 1;
  repeated string actions = 2;
  repeated string resources = 3;
}

message PolicyStatementWrapper {
  PolicyStatement statement = 1;
  string statmentHashed = 2;
}

message PermissionsState {
  repeated PolicyStatementWrapper forbid = 1;
  repeated PolicyStatementWrapper permit = 2;
}

message PermissionsStateResponse {
  Identity identity = 1;
  PermissionsState permissionsState = 2;
}

// Permissions evaluation

message PermissionsEvaluation {
  string account = 1;
  string tenant = 2;
  string project = 3;
  string domain = 4;
  string resource = 5;
  repeated string actions = 6;
}

message PermissionsEvaluationRequest {
  Identity identity = 1;
  repeated PermissionsEvaluation evaluations = 2;
}

message PermissionsEvaluationOutcomeExplanation {
  bool isExplicitlyForbidden = 1;
  bool isImplicitlyForbidden = 2;
}

message PermissionsEvaluationOutcome {
  PermissionsEvaluation evaluation = 1;
  bool allowed = 2;
  PermissionsEvaluationOutcomeExplanation explanation = 3;
}

message PermissionsEvaluationResponse {
  Identity identity = 1;
  repeated PermissionsEvaluationOutcome evaluations = 2;
  bool allowed = 3;
}

service PDPService {
  rpc GetPermissionsState (PermissionsStateRequest) returns (PermissionsStateResponse);
  rpc EvaluatePermissions(PermissionsEvaluationRequest) returns (PermissionsEvaluationResponse);
}
