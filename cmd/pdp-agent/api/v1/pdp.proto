syntax="proto3";

package policydecisionpoint;

option go_package = "github.com/autenticami/autenticami-authz/cmd/pdp-agent/v1";

message Attribute {
   string key = 1;
   string value = 2;
}

message Identity {
  string uur = 1;
  repeated Attribute attributes = 2;
}

// Permissions Service is the service that provides the permissions state of the user.

message PermissionsStateRequest {
  Identity identity = 1;
}

message PolicyStatement {
  repeated string name = 1;
  repeated string actions = 2;
  repeated string resources = 3;
}

message PolicyStatementDescription {
  string id = 1;
  PolicyStatement statement = 2;
  string statmentStringified = 3;
  string statmentHashed = 4;
}

message PermissionsState {
  repeated PolicyStatementDescription forbid = 1;
  repeated PolicyStatementDescription permit = 2;
}

message PermissionsStateResponse {
  Identity identity = 1;
  optional PermissionsState permissionsState = 2;
}

// Check permits or forbids a request.

message PermissionsEvaluation {
  string requestId = 1;
  string account = 2;
  string tenant = 3;
  string project = 4;
  string domain = 5;
  string resource = 6;
  repeated string actions = 7;
}

message CheckPermissionsRequest {
  Identity identity = 1;
  repeated PermissionsEvaluation requests = 2;
}

message PermissionsEvaluationExplanation {
  bool isExplicitlyDenied = 1;
  bool isImplicitlyDenied = 2;
}

message PermissionCheck {
  PermissionsEvaluation request = 1;
  bool allowed = 2;
  PermissionsEvaluationExplanation explanation = 3;
}

message CheckPermissionsResponse {
  Identity identity = 1;
  repeated PermissionCheck responses = 2;
  bool allowed = 3;
}

service PermissionsService {
  rpc GetPermissionsState (PermissionsStateRequest) returns (PermissionsStateResponse);
  rpc CheckPermissions(CheckPermissionsRequest) returns (CheckPermissionsResponse);
}
